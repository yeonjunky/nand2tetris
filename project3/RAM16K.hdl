// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=in[0], sel=address[12..13], a=a0, b=b0, c=c0, d=d0);
    DMux4Way(in=in[1], sel=address[12..13], a=a1, b=b1, c=c1, d=d1);
    DMux4Way(in=in[2], sel=address[12..13], a=a2, b=b2, c=c2, d=d2);
    DMux4Way(in=in[3], sel=address[12..13], a=a3, b=b3, c=c3, d=d3);
    DMux4Way(in=in[4], sel=address[12..13], a=a4, b=b4, c=c4, d=d4);
    DMux4Way(in=in[5], sel=address[12..13], a=a5, b=b5, c=c5, d=d5);
    DMux4Way(in=in[6], sel=address[12..13], a=a6, b=b6, c=c6, d=d6);
    DMux4Way(in=in[7], sel=address[12..13], a=a7, b=b7, c=c7, d=d7);
    DMux4Way(in=in[8], sel=address[12..13], a=a8, b=b8, c=c8, d=d8);
    DMux4Way(in=in[9], sel=address[12..13], a=a9, b=b9, c=c9, d=d9);
    DMux4Way(in=in[10], sel=address[12..13], a=a10, b=b10, c=c10, d=d10);
    DMux4Way(in=in[11], sel=address[12..13], a=a11, b=b11, c=c11, d=d11);
    DMux4Way(in=in[12], sel=address[12..13], a=a12, b=b12, c=c12, d=d12);
    DMux4Way(in=in[13], sel=address[12..13], a=a13, b=b13, c=c13, d=d13);
    DMux4Way(in=in[14], sel=address[12..13], a=a14, b=b14, c=c14, d=d14);
    DMux4Way(in=in[15], sel=address[12..13], a=a15, b=b15, c=c15, d=d15);
    DMux4Way(in=load, sel=address[12..13], a=aload, b=bload, c=cload, d=dload);

    RAM4K(in=in, load=aload, address=address[0..11], out=aout);
    RAM4K(in=in, load=bload, address=address[0..11], out=bout);
    RAM4K(in=in, load=cload, address=address[0..11], out=cout);
    RAM4K(in=in, load=dload, address=address[0..11], out=dout);
    
    Mux4Way16(a=aout, b=bout, c=cout, d=dout, sel=address[12..13], out=out);
}